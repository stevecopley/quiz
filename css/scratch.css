:root {
    --scratch-back:   #eceff1;

    --stage-back:     #eceff1;
    --stage-border:   #546e7a;

    --block-unknown:  #888;
    --border-unknown: #666;

    --block-move:     #4C97FF;
    --border-move:    #3373CC;
    --block-look:     #9966ff;
    --border-look:    #774dcb;
    --block-ctrl:     #ffab19;
    --border-ctrl:    #cf8b17;
    --block-evnt:     #ffbf00;
    --border-evnt:    #cc9900;
    --block-sens:     #5cb1d6;
    --border-sens:    #2e8eb8;
    --block-oper:     #59c059;
    --border-oper:    #389438;
    --block-vars:     #ff8c1a;
    --border-vars:    #db6e00;
    --block-sond:     #cf63cf;
    --border-sond:    #bd42bd;

    --block-text:     #fff;

    --value-back:     #fff;
    --value-text:     #000;

    --border-col:     #0004;
    --block-radius:   0.3em;
    --border-width:   1px;
    --border-style:   solid;

    --shading-low:    #00000008;
    --shading:        #0002;
    --shadow:         0 0.1em 0.15em #0004;

    --ques-back:      #fff;
    --ques-accent:    #4d97ff;
    --ques-glow:      #4d97ff60;
    --ques-text:      #222;


}


/*** CONTAINERS **********************************************************/

pre.language-scratch {
    background: var(--scratch-back);
    padding: 0 0 0.5rem;
    background: none;
    border: none;
    border-radius: 0;
}

pre.language-scratch,
code.language-scratch,
:not(pre) > code.language-scratch {
    white-space: normal;
    font-family: sans-serif;
    font-weight: bold;
    font-size: 0.9rem;
}

:not(pre) > code.language-scratch {
    background: none;
    border: none;
    padding: 0;
    margin: 0.3rem 0.5rem;
    line-height: 1.1;
    vertical-align: bottom;
    font-size: 0.8rem;
}



/*** STAGE **********************************************************/

code.language-scratch .stage {
    position: relative;
    max-width: calc(100% - (2 * 2px));
    width: 480px;
    box-sizing: content-box;
    aspect-ratio: 4 / 3;
    border: 2px solid var(--stage-border);
    border-radius: 0;
    background-color: var(--stage-back);
    background-image: none;
    background-position: center;
    background-size: contain;
    overflow: hidden;
}

code.language-scratch .stage header,
code.language-scratch .stage footer {
    display: none;
}

code.language-scratch .stage * {
    box-sizing: border-box;
}


/*** SPRITES / MARKERS **********************************************************/

code.language-scratch {
    --item-x:       0;
    --item-y:       0;
    --item-angle:   0;
    --item-size:    100;
    --item-image:   url('../images/scratch/sprites/turtle.svg');
    --item-colour:  #f00;
    --item-opacity: 1.0;
}


code.language-scratch .stage-item {
    position: absolute;
    --scaled-width:  calc(100% * (var(--item-size) / 480));
    --scaled-height: calc(100% * (var(--item-size) / 360));
    width: var(--scaled-width);
    height: var(--scaled-height);
    left:   calc((100% * ((240 + var(--item-x)) / 480)) - (var(--scaled-width) / 2));
    bottom: calc((100% * ((180 + var(--item-y)) / 360)) - (var(--scaled-height) / 2));
    opacity: var(--item-opacity);
}


/*** ITEM MARKERS **********************************************************/

code.language-scratch .stage-item.number .value.item-number {
    position: absolute;
    bottom: 30%;
    top: 30%;
    left: 30%;
    right: 30%;
    padding: 0;
    min-width: auto;
    border: 2px solid var(--block-text);
    background-color: var(--item-colour);
    color: var(--block-text);
    box-shadow: var(--shadow);
    border-radius: 100rem;
    font-size: 1.5em;
    z-index: 1;
}

code.language-scratch .stage-item.circle,
code.language-scratch .stage-item.square {
    border: 3px dotted var(--item-colour);
    transform: rotate( calc(1deg * var(--item-angle)) );
}

code.language-scratch .stage-item.circle { border-radius: 100rem; }
code.language-scratch .stage-item.square { border-radius: 0.75rem; }

code.language-scratch .stage-item.arrow {
    width: 0;
    border-right: 3px dashed var(--item-colour);
    left:   calc((100% * ((240 + var(--item-x)) / 480)) - 1.5px);
    bottom: calc(100% * ((180 + var(--item-y)) / 360));
    transform-origin: bottom center;
    transform: rotate( calc(1deg * var(--item-angle)) );
}

code.language-scratch .stage-item.arrow::after {
    content: '';
    position: absolute;
    top: 0;
    left: calc(-0.4rem + 1.5px);
    width: 0.8rem;
    height: 1rem;
    background-color: var(--item-colour);
    clip-path: polygon( 0% 100%, 50% 0%, 100% 100%, 0% 100% );
}

code.language-scratch .stage-item.arrow::before {
    content: '';
    position: absolute;
    bottom: -0.25rem;
    left: calc(-0.25rem + 1.5px);
    width: 0.5rem;
    height: 0.5rem;
    background-color: var(--item-colour);
    border-radius: 1rem;
}


/*** SPRITE IMAGES **********************************************************/

code.language-scratch .stage-item img {
    content: var(--item-image);
    width: 100%;
    height: 100%;
    transform: rotate( calc(1deg * var(--item-angle)) );
    filter: drop-shadow(var(--shadow));
}


/*** ITEM VALUES **********************************************************/

code.language-scratch .stage-item .value {
    position: absolute;
    left: 100%;
    white-space: nowrap;
    padding: 0.15em 0.4em 0.2em;
    border-radius: 0.3em;
    font-size: 0.8rem;
    line-height: 1;
    font-weight: normal;
    background-color: var(--block-unknown);
    color: var(--block-text);
}

code.language-scratch .stage-item .value.item-x     { top: calc(50% - 3.00em); }
code.language-scratch .stage-item .value.item-y     { top: calc(50% - 1.50em); }
code.language-scratch .stage-item .value.item-angle { top: calc(50% + 0.00em); }
code.language-scratch .stage-item .value.item-size  { top: calc(50% + 1.50em); }

code.language-scratch .stage-item .value.item-x       { background-color: var(--border-move); }
code.language-scratch .stage-item .value.item-y       { background-color: var(--border-move); }
code.language-scratch .stage-item .value.item-angle   { background-color: var(--border-move); }
code.language-scratch .stage-item .value.item-size    { background-color: var(--border-look); }
code.language-scratch .stage-item .value.item-opacity { display: none; }
code.language-scratch .stage-item .value.item-colour  { display: none; }
code.language-scratch .stage-item .value.item-image   { display: none; }

code.language-scratch .stage-item .value.item-x::before     { content: 'x: '; }
code.language-scratch .stage-item .value.item-y::before     { content: 'y: '; }
code.language-scratch .stage-item .value.item-angle::before { content: 'angle: '; }
code.language-scratch .stage-item .value.item-size::before  { content: 'size: '; }

code.language-scratch .stage-item:is(.noinfo, .arrow, .circle, .square, .number) .value:not(.item-say, .item-number) {
    display: none;
}


/*** SPEECH BUBBLES **********************************************************/

code.language-scratch .stage-item .value.item-say {
    position: absolute;
    bottom: calc(100% + 1em);
    top: auto;
    left: 1em;
    width: max-content;
    max-width: 10em;
    min-width: 5em;
    padding: 0.8em;
    border-radius: 1em;
    font-size: 1rem;
    white-space: unset;
    z-index: 1;
}

code.language-scratch .stage-item .value.item-say,
code.language-scratch .stage-item .value.item-say::after {
    border: 2px solid var(--border-col);
    background-color: var(--value-back);
    color: var(--value-text);
}

code.language-scratch .stage-item .value.item-say::after {
    content: '';
    display: block;
    position: absolute;
    bottom: -0.6em;
    left: 1em;
    height: 0.9em;
    width: 1.5em;
    border-top: none;
    border-right: none;
    transform: rotate(-30deg);
    z-index: 2;
}


/*** QUESTION **********************************************************/

code.language-scratch .question {
    position: absolute;
    left: 0.3rem;
    right: 0.3rem;
    bottom: 0.3rem;
    border-radius: 0.5rem;
    border: 2px solid var(--border-col);
    background-color: var(--ques-back);
    color: var(--ques-text);
    padding: 0.7em 1.3em 1.2em 1em;
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    z-index: 10;
}

code.language-scratch .question .value {
    justify-content: flex-start;
}

code.language-scratch .question .value:nth-child(1) {
    width: 100%;
    padding: 0;
}

code.language-scratch .question .value:nth-child(2) {
    font-weight: normal;
    margin-left: 1rem;
    padding: 0.1em;
    border-radius: 0;
    border-right: 2px solid var(--border-col); /* The typwriter cursor */
    animation: blink-caret .75s step-end infinite;
}

code.language-scratch .question .value:nth-child(2)::after {
    content: '';
    position: absolute;
    width: calc(100% - 2em);
    height: 2.6em;
    left: 1em;
    padding: 0.4em 1em;
    border: 1px solid var(--border-col);
    box-shadow: 0px 0px 3px 3px var(--ques-glow);
    border-radius: 2em;
}

code.language-scratch .question img {
    background-color: var(--ques-accent);
    border-radius: 2rem;
    width: 1.8em;
    height: 1.8em;
    margin-left: auto;
}

@keyframes blink-caret {
    from, to { border-color: transparent }
    50%      { border-color: var(--border-col); }
}


/*** BLOCKS **********************************************************/

code.language-scratch .block {
    --back-col: var(--block-unknown);
    --bord-col: var(--border-unknown);
    padding: 0.5em 0.6em;
    width: max-content;
    min-width: 5em;
    border-radius: var(--block-radius);
    color: var(--block-text);
    position: relative;
    background-color: var(--back-col);
    border: var(--border-width) var(--border-style) var(--bord-col);
}

code.language-scratch .block,
code.language-scratch .block header {
    display: flex;
    gap: 0.5em;
    align-items: center;
}

:not(pre) > code.language-scratch .block {
    padding: 0.3em 0.5em;
}


/*** CONTAINER BLOCKS **********************************************************/

code.language-scratch .block.container {
    flex-direction: column;
    gap: 0;
    align-items: flex-start;
    justify-content: space-between;
    min-height: 7em;
    min-width: 10em;
    padding: 0;
    background-color: transparent;
    background-image: linear-gradient( to right, var(--back-col) 1em, transparent 1rem );
    border-right: none;
}

code.language-scratch .block header,
code.language-scratch .block footer {
    position: relative;
    width: 100%;
    padding: 0.5em;
    border: var(--border-width) var(--border-style) var(--border-unknown);
    border-left: none;
    border-radius: var(--block-radius);
    border-color: var(--bord-col);
    background-color: var(--back-col);
    border: none;
}

code.language-scratch .block header {
    border-bottom: none;
}

code.language-scratch .block footer {
    padding: 0.2em;
    line-height: 1;
    min-height: 2em;
    text-align: right;
    border-top: none;
}

code.language-scratch .block.splitter {
    width: 100%;
    border-radius: 0 var(--block-radius) var(--block-radius) 0;
    position: relative;
    left: calc(0px - var(--border-width));
    left: -1em;
    border: none;
}

code.language-scratch .block.container .block {
    margin-left: calc( 1em + 1px );
}


/*** STARTING BLOCKS **********************************************************/

code.language-scratch .block.starter {
    margin-top: 1.25em;
    min-height: 3em;
}

code.language-scratch .block.starter::before {
    content: '';
    display: block;
    position: absolute;
    top: -1.15em;
    left: 0;
    height: 2.5em;
    width: 6em;
    background-image: linear-gradient( var(--back-col) 60%, transparent 60% );
    border-radius: 50% 50% 0 0;
    border-top: var(--border-width) var(--border-style) var(--bord-col);
    z-index: 2;
}


/*** BLOCK CONNECTORS **********************************************************/

code.language-scratch .block:not(:is(.gap, .final))::after,
code.language-scratch .block header::after {
    content: '';
    display: block;
    position: absolute;
    bottom: -0.5em;
    left: 1em;
    height: 0.5em;
    width: 1.5em;
    background-color: var(--back-col);
    border-radius: 0 0 var(--block-radius) var(--block-radius);
    border: var(--border-width) var(--border-style) var(--bord-col);
    border-top: none;
    z-index: 1;
}

code.language-scratch .block header::after,
code.language-scratch .block.splitter::after {
    left: 2.2em;
}


/*** SUB BLOCKS **********************************************************/

code.language-scratch .sub-block {
    --back-col: var(--block-unknown);
    --bord-col: var(--border-unknown);
    display: inline-flex;
    gap: 0.5em;
    align-items: center;
    padding: 0.3em 0.5em;
    background-color: var(--back-col);
    border: var(--border-width) var(--border-style) var(--bord-col);
}

code.language-scratch .sub-block.logic {
    --taper: 1em;
    --offset: 3%;

    padding: 0.3em 1.5em;
    clip-path: polygon(
        calc(var(--offset) + var(--taper)) 0%,
        calc(100% - var(--offset) - var(--taper)) 0%,
        100% 50%,
        calc(100% - var(--offset) - var(--taper)) 100%,
        calc(var(--offset) + var(--taper)) 100%,
        0% 50%
    );

    /* super-cludgy way of adding 'borders' to a clip-path shape, using gradients that can just be seen */
    --border-start: calc((var(--offset) + var(--taper)) * 0.7);
    --border-end: calc(var(--border-start) + (2 * var(--border-width)));
    background-image: linear-gradient(45deg,  var(--bord-col) var(--border-start), var(--back-col) var(--border-end), transparent 25%),
                      linear-gradient(135deg, var(--bord-col) var(--border-start), var(--back-col) var(--border-end), transparent 25%),
                      linear-gradient(225deg, var(--bord-col) var(--border-start), var(--back-col) var(--border-end), transparent 25%),
                      linear-gradient(315deg, var(--bord-col) var(--border-start), var(--back-col) var(--border-end), transparent 25%);
}


code.language-scratch .sub-block.operator.logic.boolean {
    padding: 0.3em 0.5em;
}

code.language-scratch .sub-block.operator:not(.logic) {
    border-radius: 3em;
}

code.language-scratch .sub-block.operator.function {
    padding: 0.3em 0.5em 0.3em 0.8em;
}


/*** DATA CONTAINERS **********************************************************/

code.language-scratch img {
    display: inline-block;
    height: 1.4em;
    width: 1.4em;
}

code.language-scratch .value {
    display: inline-flex;
    gap: 0.5em;
    align-items: center;
    justify-content: center;
    padding: 0.2em 0.6em;
    min-width: 2.8em;
    border-radius: 2em;
    border: var(--border-width) var(--border-style) var(--bord-col);
    background-color: var(--value-back);
    color: var(--value-text);
}

code.language-scratch .value:is(.variable, .looks, .motion, .sensing, .colour):not(.menu) {
    padding: 0.4em 0.7em;
}

code.language-scratch .menu {
    display: inline-block;
    position: relative;
    padding: 0.2em 1.6em 0.2em 0.6em;
    border-radius: var(--block-radius);
    border: var(--border-width) var(--border-style) var(--bord-col);
    background-color: var(--shading-low);
    color: var(--block-text);
}

code.language-scratch :is(.sensing, .value.sensing) .menu {
    border-radius: 2em;
}

code.language-scratch .menu::after {
    content: '▼';
    position: absolute;
    right: 0.4em;
    top: 0.2em;
}

code.language-scratch .value.colour {
    background-color: var(--back-col);
}


/*** GAPS **********************************************************/

code.language-scratch .gap {
    background: none;
    border: none;
    height: 2em;
}



/*** BLOCK COLOURS **********************************************************/

code.language-scratch .value.motion   { color: var(--block-text); background-color: var(--block-move); }
code.language-scratch .value.looks    { color: var(--block-text); background-color: var(--block-look); }
code.language-scratch .value.sensing  { color: var(--block-text); background-color: var(--block-sens); }
code.language-scratch .value.variable { color: var(--block-text); background-color: var(--block-vars); }

code.language-scratch .block.motion       { --back-col: var(--block-move); --bord-col: var(--border-move); }
code.language-scratch .block.looks        { --back-col: var(--block-look); --bord-col: var(--border-look); }
code.language-scratch .block.control      { --back-col: var(--block-ctrl); --bord-col: var(--border-ctrl); }
code.language-scratch .block.events       { --back-col: var(--block-evnt); --bord-col: var(--border-evnt); }
code.language-scratch .block.sensing      { --back-col: var(--block-sens); --bord-col: var(--border-sens); }
code.language-scratch .block.operators    { --back-col: var(--block-oper); --bord-col: var(--border-oper); }
code.language-scratch .block.variables    { --back-col: var(--block-vars); --bord-col: var(--border-vars); }
code.language-scratch .block.sounds       { --back-col: var(--block-sond); --bord-col: var(--border-sond); }

code.language-scratch .sub-block.operator { --back-col: var(--block-oper); --bord-col: var(--border-oper); }
code.language-scratch .sub-block.sensing  { --back-col: var(--block-sens); --bord-col: var(--border-sens); }

